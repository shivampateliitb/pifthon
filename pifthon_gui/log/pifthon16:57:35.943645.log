INFO:root:

*********** Monitor started **********


INFO:root:Parsing inputs/declassify2.py started
INFO:root:program file name:inputs/declassify2.py
INFO:root:highest achievable label by the executing subject = A,['A', 'B'],['A', 'C']
INFO:root:Parsing declassify2 is completed
INFO:root:AST written into file: inputs/declassify2.py.ast
INFO:root:Given function labels are:
Not Given
INFO:root:Given global labels are:
a : A,['A', 'B', 'D'],['A', 'C']
b : A,['B', 'A'],['C']
C : C,['A', 'B', 'C'],['A']

INFO:root:Given output files are:
Not Given
INFO:root:Starting dynamic labelling
DEBUG:root:Starting the function current node: FunctionDef at line 0
DEBUG:root:Ending the function current node: endfunc at line 20
DEBUG:root:current node: Assign at line 21
DEBUG:root:Target variables of the assignment statement are: ['a', 'b', 'c']
DEBUG:root:current node: Call at line 27
DEBUG:root:Function name: foo
DEBUG:root:Function is executed with subject label A,['A', 'B'],['A', 'C']
DEBUG:root:Function arguments are ['6', 'b', 'a']
DEBUG:root:reading arguments
DEBUG:root:Global variable b has label A,['B', 'A'],['C']
DEBUG:root:Global variable a has label A,['A', 'B', 'D'],['A', 'C']
DEBUG:root:New labelling function is created
DEBUG:root:Saved current line is : 33
DEBUG:root:Function foo is defined at line number 1
DEBUG:root:Function parameters are ['m', 'e', 'f']
DEBUG:root:Length of arguments and parameters are same = 3
DEBUG:root:Argument 6 is not defined
DEBUG:root:Label of parameter m after reading the argument 6 is A,['*'],[]
DEBUG:root:Function PC label before reading parameter m is PC,['*'],[]
DEBUG:root:Function PC label after reading parameter m is PC,['*'],[]
DEBUG:root:Argument b is global
DEBUG:root:PC label before reading b is PC,['*'],[]
DEBUG:root:PC label after reading b is PC,['B', 'A'],['C']
DEBUG:root:Label of parameter e after reading the argument b is A,['A', 'B'],['C']
DEBUG:root:Function PC label before reading parameter e is PC,['*'],[]
DEBUG:root:Function PC label after reading parameter e is PC,['A', 'B'],['C']
DEBUG:root:Argument a is global
DEBUG:root:PC label before reading a is PC,['B', 'A'],['C']
DEBUG:root:PC label after reading a is PC,['A', 'B'],['A', 'C']
DEBUG:root:Label of parameter f after reading the argument a is A,['A', 'D', 'B'],['A', 'C']
DEBUG:root:Function PC label before reading parameter f is PC,['A', 'B'],['C']
DEBUG:root:Function PC label after reading parameter f is PC,['A', 'B'],['A', 'C']
DEBUG:root:Starting Execution of the body of function foo
DEBUG:root:current node: Compare at line 5
DEBUG:root:Source variables of comparison statements are: ['m', '6']
DEBUG:root:Source Variable m is a local having label A,['*'],[]
DEBUG:root:Source Variable 6 is created with label A,['*'],[]
DEBUG:root:current node: Return at line 8
DEBUG:root:Returning variables are ['m', 'a', 'b']
DEBUG:root:Local variable: m
DEBUG:root:Label of m before downgrading A,['*'],[]
DEBUG:root:Label of m after downgrading A,['*'],[]
DEBUG:root:Global variable: a
DEBUG:root:Label of a before downgrading A,['A', 'B', 'D'],['A', 'C']
DEBUG:root:Label of a after downgrading A,['A', 'D', 'B'],['A', 'C']
DEBUG:root:Global variable: b
DEBUG:root:Label of b before downgrading A,['B', 'A'],['C']
DEBUG:root:Label of b after downgrading A,['B', 'A'],['C']
DEBUG:root:current node: Return at line 14
DEBUG:root:Returning variables are ['a', 'b', 'd']
DEBUG:root:Global variable: a
DEBUG:root:Label of a before downgrading A,['A', 'D', 'B'],['A', 'C']
DEBUG:root:Label of a after downgrading A,['A', 'D', 'B'],['A', 'C']
DEBUG:root:Label after joining label in the list A,['*'],[] and new downgraded label A,['A', 'D', 'B'],['A', 'C'] is below :
DEBUG:root: A,['A', 'D', 'B'],['A', 'C']
DEBUG:root:Global variable: b
DEBUG:root:Label of b before downgrading A,['B', 'A'],['C']
DEBUG:root:Label of b after downgrading A,['B', 'A'],['C']
DEBUG:root:Label after joining label in the list A,['A', 'D', 'B'],['A', 'C'] and new downgraded label A,['B', 'A'],['C'] is below :
DEBUG:root: A,['A', 'B'],['A', 'C']
DEBUG:root:Label of d before downgrading A,['*'],[]
DEBUG:root:Label of d after downgrading A,['*'],[]
DEBUG:root:Label after joining label in the list A,['A', 'B'],['A', 'C'] and new downgraded label A,['*'],[] is below :
DEBUG:root: A,['A', 'B'],['A', 'C']
DEBUG:root:All the return statements have been read
DEBUG:root:Checking if the labels in the downgrade list can flow to the function foo
DEBUG:root:The label A,['A', 'D', 'B'],['A', 'C'] of return value at place 0 can flow to function foo
DEBUG:root:The label A,['A', 'B'],['A', 'C'] of return value at place 1 can flow to function foo
DEBUG:root:The label A,['A', 'B'],['A', 'C'] of return value at place 2 can flow to function foo
DEBUG:root:Function foo execution completed
INFO:root:Derived labels of local variables from function: foo
INFO:root:m : A,['*'],[]
e : A,['A', 'B'],['C']
f : A,['A', 'D', 'B'],['A', 'C']

DEBUG:root:Current line is now back to 33
DEBUG:root:Updated PC label PC,['A', 'B'],['A', 'C']
DEBUG:root:Label of target a is a given as A,['A', 'D', 'B'],['A', 'C']
WARNING:root:MISUSE: Illegal information flow from PC to a
Information from PC,['A', 'B'],['A', 'C'] cannot flow to A,['A', 'D', 'B'],['A', 'C']
WARNING:root:****** Monitor Aborted ******
